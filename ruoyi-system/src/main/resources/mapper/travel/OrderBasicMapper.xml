<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.travel.mapper.OrderBasicMapper">

    <resultMap type="OrderBasic" id="OrderBasicResult">
        <result property="id"    column="id"    />
        <result property="productId"    column="product_id"    />
        <result property="routeId"    column="route_id"    />
        <result property="productName"    column="product_name"    />
        <result property="userId"    column="user_id"    />
        <result property="phonenumber"    column="phonenumber"    />
        <result property="travelTime"    column="travel_time"    />
        <result property="orderTime"    column="order_time"    />
        <result property="peopleNumber"    column="people_number"    />
        <result property="price"    column="price"    />
        <result property="orderStatus"    column="order_status"    />
        <result property="payTime"    column="pay_time"    />
        <result property="payComment"    column="pay_comment"    />
        <result property="payWay"    column="pay_way"    />
        <result property="refundTime"    column="refund_time"    />
        <result property="refundComment"    column="refund_comment"    />
        <result property="editTime"    column="edit_time"    />
    </resultMap>

    <resultMap id="OrderBasicOrderMemberResult" type="OrderBasic" extends="OrderBasicResult">
        <collection property="orderMemberList" notNullColumn="sub_id" javaType="java.util.List" resultMap="OrderMemberResult" />
    </resultMap>

    <resultMap type="OrderMember" id="OrderMemberResult">
        <result property="id"    column="sub_id"    />
        <result property="orderId"    column="sub_order_id"    />
        <result property="memberName"    column="sub_member_name"    />
        <result property="memberIdCard"    column="sub_member_id_card"    />
        <result property="memberPhonenumber"    column="sub_member_phonenumber"    />
        <result property="memberSex"    column="sub_member_sex"    />
    </resultMap>

    <sql id="selectOrderBasicVo">
        select id, product_id, route_id, product_name, user_id, phonenumber, travel_time, order_time, people_number, price, order_status, pay_time, pay_comment, pay_way, refund_time, refund_comment, edit_time from travel_order_basic
    </sql>

    <select id="selectOrderBasicList" parameterType="OrderBasic" resultMap="OrderBasicResult">
        <include refid="selectOrderBasicVo"/>
        <where>
            <if test="id != null "> and id = #{id}</if>
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="routeId != null "> and route_id = #{routeId}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and phonenumber = #{phonenumber}</if>
            <if test="travelTime != null "> and to_days(travel_time) = to_days(#{travelTime})</if>
            <if test="orderTime != null "> and to_days(order_time) = to_days(#{orderTime})</if>
            <if test="peopleNumber != null "> and people_number = #{peopleNumber}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="orderStatus != null "> and order_status = #{orderStatus}</if>
            <if test="payTime != null "> and to_days(pay_time) = to_days(#{payTime})</if>
            <if test="payWay != null "> and pay_way = #{payWay}</if>
            <if test="refundTime != null "> and to_days(refund_time) = to_days(#{refundTime})</if>
            <if test="editTime != null "> and edit_time = #{editTime}</if>
        </where>
    </select>

    <select id="selectOrderBasicListDesc" parameterType="OrderBasic" resultMap="OrderBasicResult">
        <include refid="selectOrderBasicVo"/>
        <where>
            <if test="id != null "> and id = #{id}</if>
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="routeId != null "> and route_id = #{routeId}</if>
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and phonenumber = #{phonenumber}</if>
            <if test="travelTime != null "> and to_days(travel_time) = to_days(#{travelTime})</if>
            <if test="orderTime != null "> and to_days(order_time) = to_days(#{orderTime})</if>
            <if test="peopleNumber != null "> and people_number = #{peopleNumber}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="orderStatus != null "> and order_status = #{orderStatus}</if>
            <if test="payTime != null "> and to_days(pay_time) = to_days(#{payTime})</if>
            <if test="payWay != null "> and pay_way = #{payWay}</if>
            <if test="refundTime != null "> and to_days(refund_time) = to_days(#{refundTime})</if>
            <if test="editTime != null "> and edit_time = #{editTime}</if>
        </where>
        order by order_time desc
    </select>

    <select id="selectOrderBasicById" parameterType="Long" resultMap="OrderBasicOrderMemberResult">
        select a.id, a.product_id, a.route_id, a.product_name, a.user_id, a.phonenumber, a.travel_time, a.order_time, a.people_number, a.price, a.order_status, a.pay_time, a.pay_comment, a.pay_way, a.refund_time, a.refund_comment, a.edit_time,
            b.id as sub_id, b.order_id as sub_order_id, b.member_name as sub_member_name, b.member_id_card as sub_member_id_card, b.member_phonenumber as sub_member_phonenumber, b.member_sex as sub_member_sex
        from travel_order_basic a
        left join travel_order_member b on b.order_id = a.id
        where a.id = #{id}
    </select>

    <insert id="insertOrderBasic" parameterType="OrderBasic" useGeneratedKeys="true" keyProperty="id">
        insert into travel_order_basic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">product_id,</if>
            <if test="routeId != null">route_id,</if>
            <if test="productName != null">product_name,</if>
            <if test="userId != null">user_id,</if>
            <if test="phonenumber != null">phonenumber,</if>
            <if test="travelTime != null">travel_time,</if>
            <if test="orderTime != null">order_time,</if>
            <if test="peopleNumber != null">people_number,</if>
            <if test="price != null">price,</if>
            <if test="orderStatus != null">order_status,</if>
            <if test="payTime != null">pay_time,</if>
            <if test="payComment != null">pay_comment,</if>
            <if test="payWay != null">pay_way,</if>
            <if test="refundTime != null">refund_time,</if>
            <if test="refundComment != null">refund_comment,</if>
            <if test="editTime != null">edit_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">#{productId},</if>
            <if test="routeId != null">#{routeId},</if>
            <if test="productName != null">#{productName},</if>
            <if test="userId != null">#{userId},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="travelTime != null">#{travelTime},</if>
            <if test="orderTime != null">#{orderTime},</if>
            <if test="peopleNumber != null">#{peopleNumber},</if>
            <if test="price != null">#{price},</if>
            <if test="orderStatus != null">#{orderStatus},</if>
            <if test="payTime != null">#{payTime},</if>
            <if test="payComment != null">#{payComment},</if>
            <if test="payWay != null">#{payWay},</if>
            <if test="refundTime != null">#{refundTime},</if>
            <if test="refundComment != null">#{refundComment},</if>
            <if test="editTime != null">#{editTime},</if>
         </trim>
    </insert>

    <update id="updateOrderBasic" parameterType="OrderBasic">
        update travel_order_basic
        <trim prefix="SET" suffixOverrides=",">
            <if test="productId != null">product_id = #{productId},</if>
            <if test="routeId != null">route_id = #{routeId},</if>
            <if test="productName != null">product_name = #{productName},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
            <if test="travelTime != null">travel_time = #{travelTime},</if>
            <if test="orderTime != null">order_time = #{orderTime},</if>
            <if test="peopleNumber != null">people_number = #{peopleNumber},</if>
            <if test="price != null">price = #{price},</if>
            <if test="orderStatus != null">order_status = #{orderStatus},</if>
            <if test="payTime != null">pay_time = #{payTime},</if>
            <if test="payComment != null">pay_comment = #{payComment},</if>
            <if test="payWay != null">pay_way = #{payWay},</if>
            <if test="refundTime != null">refund_time = #{refundTime},</if>
            <if test="refundComment != null">refund_comment = #{refundComment},</if>
            <if test="editTime != null">edit_time = #{editTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteOrderBasicById" parameterType="Long">
        delete from travel_order_basic where id = #{id}
    </delete>

    <delete id="deleteOrderBasicByIds" parameterType="String">
        delete from travel_order_basic where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteOrderMemberByOrderIds" parameterType="String">
        delete from travel_order_member where order_id in
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <delete id="deleteOrderMemberByOrderId" parameterType="Long">
        delete from travel_order_member where order_id = #{orderId}
    </delete>

    <insert id="batchOrderMember">
        insert into travel_order_member( id, order_id, member_name, member_id_card, member_phonenumber, member_sex) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.orderId}, #{item.memberName}, #{item.memberIdCard}, #{item.memberPhonenumber}, #{item.memberSex})
        </foreach>
    </insert>
</mapper>
